{"version":3,"sources":["Components/Header.jsx","Components/Task.jsx","Components/Sidebar.jsx","Components/Content.jsx","App.jsx","index.js"],"names":["Header","className","FORMAT","AddTask","onCancel","onAddClick","useState","task","setTask","date","setDate","type","value","onChange","e","target","disabled","onClick","onDayChange","day","placeholder","dateFnsFormat","Date","formatDate","format","locale","dayPickerProps","modifiers","before","Task_header_mapping","INBOX","TODAY","NEXT_7","TaskItems","selectedTab","tasks","tasksToRender","filter","isAfter","isBefore","addDays","isToday","map","text","Task","showAddTask","setShowAddTask","list","setList","addDate","prevList","length","Sidebar","setSelectedTab","console","log","Content","App","Fragment","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"yLAgBeA,EAdA,WACb,OACE,wBAAQC,UAAU,SAAlB,SACE,qBAAKA,UAAU,UAAf,SACE,qBAAKA,UAAU,OAAf,SACE,wCACQ,mD,gFCAZC,EAAS,iBACTC,EAAU,SAAC,GAA8B,IAA5BC,EAA2B,EAA3BA,SAAUC,EAAiB,EAAjBA,WAC3B,EAAwBC,mBAAS,IAAjC,mBAAOC,EAAP,KAAaC,EAAb,KACA,EAAwBF,mBAAS,IAAjC,mBAAOG,EAAP,KAAaC,EAAb,KAKA,OACE,sBAAKT,UAAU,iBAAf,UACE,uBACEU,KAAK,OACLC,MAAOL,EACPM,SAAU,SAACC,GACTN,EAAQM,EAAEC,OAAOH,UAGrB,sBAAKX,UAAU,eAAf,UACE,sBAAKA,UAAU,aAAf,UACE,wBACEe,UAAWT,EACXN,UAAU,WACVgB,QAAS,WACPZ,EAAWE,EAAME,GACjBD,EAAQ,IACRJ,KANJ,sBAWA,wBACEH,UAAU,aACVgB,QAAS,WACPb,IACAI,EAAQ,KAJZ,uBAUF,qBAAKP,UAAU,iBAAf,SACE,cAAC,IAAD,CACEiB,YAAa,SAACC,GAAD,OAAST,EAAQS,IAC9BC,YAAW,UAAKC,YAAc,IAAIC,KAAQpB,IAC1CqB,WAvCV,SAAoBd,EAAMe,EAAQC,GAChC,OAAOJ,YAAcZ,EAAMe,EAAQ,CAAEC,YAuC7BD,OAAQtB,EACRwB,eAAgB,CACdC,UAAW,CACTX,SAAU,CAAC,CAAEY,OAAQ,IAAIN,oBAUnCO,EAAsB,CAC1BC,MAAO,QACPC,MAAO,QACPC,OAAQ,eAGJC,EAAY,SAAC,GAA4B,IAA1BC,EAAyB,EAAzBA,YAAaC,EAAY,EAAZA,MAC5BC,EAAa,YAAOD,GAYxB,MAXoB,WAAhBD,IACFE,EAAgBA,EAAcC,QAC5B,SAAC9B,GAAD,OACE+B,YAAQ/B,EAAKE,KAAM,IAAIa,OACvBiB,YAAShC,EAAKE,KAAM+B,YAAQ,IAAIlB,KAAQ,QAI1B,UAAhBY,IACFE,EAAgBA,EAAcC,QAAO,SAAC9B,GAAD,OAAUkC,YAAQlC,EAAKE,UAG5D,qBAAKR,UAAU,iBAAf,SACGmC,EAAcM,KAAI,SAACnC,GAAD,OACjB,sBAAKN,UAAU,aAAf,UACE,oBAAIA,UAAU,OAAd,SAAsBM,EAAKoC,OAC3B,4BAAItB,YAAc,IAAIC,KAAKf,EAAKE,MAAOP,cAgDlC0C,EAzCF,SAAC,GAAqB,IAAnBV,EAAkB,EAAlBA,YACd,EAAsC5B,oBAAS,GAA/C,mBAAOuC,EAAP,KAAoBC,EAApB,KACA,EAAwBxC,mBAAS,IAAjC,mBAAOyC,EAAP,KAAaC,EAAb,KAOA,OACE,sBAAK/C,UAAU,QAAf,UACE,6BAAK4B,EAAoBK,KACR,UAAhBA,EACC,sBACEjC,UAAU,UACVgB,QAAS,WACP6B,GAAgBD,IAHpB,UAME,sBAAM5C,UAAU,OAAhB,eACA,sBAAMA,UAAU,eAAhB,2BAEA,KACH4C,EACC,cAAC,EAAD,CACExC,WArBQ,SAACsC,EAAMlC,GACrB,IAAMwC,EAAU,CAAEN,OAAMlC,KAAMA,GAAQ,IAAIa,MAC1C0B,GAAQ,SAACE,GAAD,4BAAkBA,GAAlB,CAA4BD,QAoB9B7C,SAAU,WACR0C,GAAe,MAGjB,KACJ,oBAAI7C,UAAU,WACb8C,EAAKI,OAAS,EACb,cAAC,EAAD,CAAWhB,MAAOY,EAAMb,YAAaA,IAErC,sD,QChGOkB,EAjCC,SAAC,GAAqC,IAAnClB,EAAkC,EAAlCA,YAAamB,EAAqB,EAArBA,eAE9B,OADAC,QAAQC,IAAIrB,GAEV,sBAAKjC,UAAU,WAAf,UACE,sBACEA,UAAU,SACVgB,QAAS,WACPoC,EAAe,UAHnB,UAME,cAAC,IAAD,CAASpD,UAAU,SANrB,WASA,sBACEgB,QAAS,WACPoC,EAAe,UAFnB,UAKE,cAAC,IAAD,CAAkBpD,UAAU,SAL9B,WAQA,sBACEgB,QAAS,WACPoC,EAAe,WAFnB,UAKE,cAAC,IAAD,CAAepD,UAAU,SAL3B,qBCVSuD,EAVC,WACd,MAAsClD,mBAAS,SAA/C,mBAAO4B,EAAP,KAAoBmB,EAApB,KACA,OACE,0BAASpD,UAAU,UAAnB,UACE,cAAC,EAAD,CAASiC,YAAaA,EAAamB,eAAgBA,IACnD,cAAC,EAAD,CAAMnB,YAAaA,QCKVuB,G,MATH,WACV,OACE,eAAC,IAAMC,SAAP,WACE,cAAC,EAAD,IACA,cAAC,EAAD,SCLNC,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,W","file":"static/js/main.0d77045f.chunk.js","sourcesContent":["import React from \"react\";\r\n\r\nconst Header = () => {\r\n  return (\r\n    <header className=\"header\">\r\n      <nav className=\"nav-bar\">\r\n        <div className=\"logo\">\r\n          <h1>\r\n            Let's <span>Do It</span>\r\n          </h1>\r\n        </div>\r\n      </nav>\r\n    </header>\r\n  );\r\n};\r\n\r\nexport default Header;\r\n","import React, { useState } from \"react\";\r\nimport DayPickerInput from \"react-day-picker/DayPickerInput\";\r\nimport \"react-day-picker/lib/style.css\";\r\nimport dateFnsFormat from \"date-fns/format\";\r\nimport isAfter from \"date-fns/isAfter\";\r\nimport isBefore from \"date-fns/isBefore\";\r\nimport addDays from \"date-fns/addDays\";\r\nimport isToday from \"date-fns/isToday\";\r\nconst FORMAT = \"dd / MM / yyyy\";\r\nconst AddTask = ({ onCancel, onAddClick }) => {\r\n  const [task, setTask] = useState(\"\");\r\n  const [date, setDate] = useState(\"\");\r\n\r\n  function formatDate(date, format, locale) {\r\n    return dateFnsFormat(date, format, { locale });\r\n  }\r\n  return (\r\n    <div className=\"task-conatiner\">\r\n      <input\r\n        type=\"text\"\r\n        value={task}\r\n        onChange={(e) => {\r\n          setTask(e.target.value);\r\n        }}\r\n      />\r\n      <div className=\"task-actions\">\r\n        <div className=\"action-btn\">\r\n          <button\r\n            disabled={!task}\r\n            className=\"save-btn\"\r\n            onClick={() => {\r\n              onAddClick(task, date);\r\n              setTask(\"\");\r\n              onCancel();\r\n            }}\r\n          >\r\n            Add task\r\n          </button>\r\n          <button\r\n            className=\"cancel-btn\"\r\n            onClick={() => {\r\n              onCancel();\r\n              setTask(\"\");\r\n            }}\r\n          >\r\n            Cancel\r\n          </button>\r\n        </div>\r\n        <div className=\"icon-container\">\r\n          <DayPickerInput\r\n            onDayChange={(day) => setDate(day)}\r\n            placeholder={`${dateFnsFormat(new Date(), FORMAT)}`}\r\n            formatDate={formatDate}\r\n            format={FORMAT}\r\n            dayPickerProps={{\r\n              modifiers: {\r\n                disabled: [{ before: new Date() }],\r\n              },\r\n            }}\r\n          />\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nconst Task_header_mapping = {\r\n  INBOX: \"Inbox\",\r\n  TODAY: \"Today\",\r\n  NEXT_7: \"Next 7 Days\",\r\n};\r\n\r\nconst TaskItems = ({ selectedTab, tasks }) => {\r\n  let tasksToRender = [...tasks];\r\n  if (selectedTab === \"NEXT_7\") {\r\n    tasksToRender = tasksToRender.filter(\r\n      (task) =>\r\n        isAfter(task.date, new Date()) &&\r\n        isBefore(task.date, addDays(new Date(), 7))\r\n    );\r\n  }\r\n\r\n  if (selectedTab === \"TODAY\") {\r\n    tasksToRender = tasksToRender.filter((task) => isToday(task.date));\r\n  }\r\n  return (\r\n    <div className=\"list-container\">\r\n      {tasksToRender.map((task) => (\r\n        <div className=\"list-items\">\r\n          <li className=\"list\">{task.text}</li>\r\n          <p>{dateFnsFormat(new Date(task.date), FORMAT)}</p>\r\n        </div>\r\n      ))}\r\n    </div>\r\n  );\r\n};\r\n\r\nconst Task = ({ selectedTab }) => {\r\n  const [showAddTask, setShowAddTask] = useState(false);\r\n  const [list, setList] = useState([]);\r\n\r\n  const addList = (text, date) => {\r\n    const addDate = { text, date: date || new Date() };\r\n    setList((prevList) => [...prevList, addDate]);\r\n  };\r\n\r\n  return (\r\n    <div className=\"tasks\">\r\n      <h1>{Task_header_mapping[selectedTab]}</h1>\r\n      {selectedTab === \"INBOX\" ? (\r\n        <div\r\n          className=\"add-btn\"\r\n          onClick={() => {\r\n            setShowAddTask(!showAddTask);\r\n          }}\r\n        >\r\n          <span className=\"plus\">+</span>\r\n          <span className=\"add-text-btn\">Add Taks..</span>\r\n        </div>\r\n      ) : null}\r\n      {showAddTask ? (\r\n        <AddTask\r\n          onAddClick={addList}\r\n          onCancel={() => {\r\n            setShowAddTask(false);\r\n          }}\r\n        />\r\n      ) : null}\r\n      <hr className=\"hrline\" />\r\n      {list.length > 0 ? (\r\n        <TaskItems tasks={list} selectedTab={selectedTab} />\r\n      ) : (\r\n        <b>No Task Available</b>\r\n      )}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Task;\r\n","import React from \"react\";\r\nimport { FaInbox, FaRegCalendarAlt, FaRegCalendar } from \"react-icons/fa\";\r\n\r\nconst Sidebar = ({ selectedTab, setSelectedTab }) => {\r\n  console.log(selectedTab);\r\n  return (\r\n    <div className=\"side-bar\">\r\n      <div\r\n        className=\"active\"\r\n        onClick={() => {\r\n          setSelectedTab(\"INBOX\");\r\n        }}\r\n      >\r\n        <FaInbox className=\"icon\" />\r\n        Inbox\r\n      </div>\r\n      <div\r\n        onClick={() => {\r\n          setSelectedTab(\"TODAY\");\r\n        }}\r\n      >\r\n        <FaRegCalendarAlt className=\"icon\" />\r\n        Today\r\n      </div>\r\n      <div\r\n        onClick={() => {\r\n          setSelectedTab(\"NEXT_7\");\r\n        }}\r\n      >\r\n        <FaRegCalendar className=\"icon\" />\r\n        Next 7 Days\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Sidebar;\r\n","import React, { useState } from \"react\";\r\nimport Task from \"./Task\";\r\nimport Sidebar from \"./Sidebar\";\r\n\r\nconst Content = () => {\r\n  const [selectedTab, setSelectedTab] = useState(\"INBOX\");\r\n  return (\r\n    <section className=\"content\">\r\n      <Sidebar selectedTab={selectedTab} setSelectedTab={setSelectedTab} />\r\n      <Task selectedTab={selectedTab} />\r\n    </section>\r\n  );\r\n};\r\n\r\nexport default Content;\r\n","import React from \"react\";\nimport Header from \"./Components/Header\";\nimport Content from \"./Components/Content\";\nimport \"./App.css\";\n\nconst App = () => {\n  return (\n    <React.Fragment>\n      <Header />\n      <Content />\n    </React.Fragment>\n  );\n};\n\nexport default App;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport App from \"./App\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n"],"sourceRoot":""}